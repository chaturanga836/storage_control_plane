# Nginx Reverse Proxy Configuration for Go Storage Control Plane
# Repository location: /opt/storage_control_plane
# This configuration routes external requests to the Go microservices

server {
    listen 80;
    server_name yourdomain.com;
    
    # Add common headers for all requests
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeout configurations
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;

    # üîê Auth Gateway (Port 8090) - CORRECTED PORT
    location /auth/ {
        proxy_pass http://localhost:8090/;
        # Remove the /auth prefix when forwarding to the service
        rewrite ^/auth/(.*)$ /$1 break;
    }

    # üè¢ Tenant Node (Port 8000)
    location /data/ {
        proxy_pass http://localhost:8000/;
        rewrite ^/data/(.*)$ /$1 break;
    }

    # üéØ Operation Node (Port 8081)
    location /query/ {
        proxy_pass http://localhost:8081/;
        rewrite ^/query/(.*)$ /$1 break;
    }

    # üß† CBO Engine (Port 8082)
    location /optimize/ {
        proxy_pass http://localhost:8082/;
        rewrite ^/optimize/(.*)$ /$1 break;
    }

    # üìä Metadata Catalog (Port 8083)
    location /metadata/ {
        proxy_pass http://localhost:8083/;
        rewrite ^/metadata/(.*)$ /$1 break;
    }

    # üìà Monitoring (Port 8084)
    location /monitor/ {
        proxy_pass http://localhost:8084/;
        rewrite ^/monitor/(.*)$ /$1 break;
    }

    # üîç Query Interpreter (Port 8085)
    location /parse/ {
        proxy_pass http://localhost:8085/;
        rewrite ^/parse/(.*)$ /$1 break;
    }

    # Health check endpoint - routes to auth gateway
    location /health {
        proxy_pass http://localhost:8090/health;
    }

    # API documentation or admin interface
    location /admin/ {
        proxy_pass http://localhost:8084/;
        rewrite ^/admin/(.*)$ /$1 break;
    }

    # Default route for any other requests
    location / {
        return 404 "Service not found";
        add_header Content-Type text/plain;
    }
}

# HTTPS Configuration (optional but recommended for production)
server {
    listen 443 ssl http2;
    server_name yourdomain.com;
    
    # SSL certificate configuration
    # ssl_certificate /path/to/your/certificate.crt;
    # ssl_certificate_key /path/to/your/private.key;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Same proxy configuration as HTTP
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Include all the same location blocks as above
    include /etc/nginx/conf.d/storage-control-plane-locations.conf;
}
